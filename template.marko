<div if(data.debug)>
  ${data.debug}
</div>
<div if(data.loggedIn)>
  Logged in with MF
</div>
<div if(data.isEnableOauth2)>
  Hi, <a href="/auth">Log in with MF</a>
</div>
<div else>
  Hi, Would you set oAuth2 variables up?
</div>
<div id="phaser-example"></div>

<footer>
  <a href="/">Top</a>
</footer>

<script src="phaser-230-box2d.js"></script>
<script>

var game = new Phaser.Game(800, 600, Phaser.CANVAS, 'phaser-example', { create: create, update: update, render: render });

var groundVertices = ${data.groundVertices};

var truckVertices = [-0.941074,-7.13798,-69.9798,-7.91197,-73.1929,8.39935,-68.3795,12.8165,-57.3861,13.1711,
-48.8751,3.47799,-35.3993,2.53232,-23.1057,14.7078,34.2254,15.6535,45.2188,3.8326,
59.8766,3.8326,67.2056,10.2159,71.7627,9.80711,72.9977,1.35024,69.3556,-5.51562,
34.5293,-7.36343,21.802,-21.4563,1.15879,-21.9506];

var truckBody;
var driveJoints = [];

function create() {

	game.world.setBounds(-10000, -10000, 20000, 20000);

	game.stage.backgroundColor = '#124184';

	// Enable Box2D physics
	game.physics.startSystem(Phaser.Physics.BOX2D);
	game.physics.box2d.gravity.y = 500;
	game.physics.box2d.friction = 0.8;

	// Make the ground body
	var groundBody = new Phaser.Physics.Box2D.Body(this.game, null, 0, 0, 0);
	groundBody.setChain(groundVertices);

	var PTM = 50;

	// Make the truck body
	truckBody = new Phaser.Physics.Box2D.Body(this.game, null, 0, -1*PTM);
	truckBody.setPolygon(truckVertices);

	// Make the wheel bodies
	var wheelBodies = [];
	wheelBodies[0] = new Phaser.Physics.Box2D.Body(this.game, null, -0.82*PTM, 0.6*-PTM);
	wheelBodies[1] = new Phaser.Physics.Box2D.Body(this.game, null,  1.05*PTM, 0.6*-PTM);
	wheelBodies[0].setCircle(0.3*PTM);
	wheelBodies[1].setCircle(0.3*PTM);

	var frequency = 3.5;
	var damping = 0.5;
	var motorTorque = 2;
	var rideHeight = 0.5;

	// Make wheel joints
	// bodyA, bodyB, ax, ay, bx, by, axisX, axisY, frequency, damping, motorSpeed, motorTorque, motorEnabled
	driveJoints[0] = game.physics.box2d.wheelJoint(truckBody, wheelBodies[0], -0.82*PTM,rideHeight*PTM, 0,0, 0,1, frequency, damping, 0, motorTorque, true ); // rear
	driveJoints[1] = game.physics.box2d.wheelJoint(truckBody, wheelBodies[1],  1.05*PTM,rideHeight*PTM, 0,0, 0,1, frequency, damping, 0, motorTorque, true ); // front

	cursors = game.input.keyboard.createCursorKeys();

	game.camera.follow(truckBody);

	var caption = game.add.text(5, 5, 'Simple car control. Left/right arrow keys to move, down arrow key to brake.', { fill: '#ffffff', font: '14pt Arial' });
	caption.fixedToCamera = true;
}

function update() {

	var motorSpeed = 50; // rad/s
	var motorEnabled = true;

	if (cursors.down.isDown) { motorSpeed = 0; } // prioritize braking
	else if (cursors.left.isDown && !cursors.right.isDown) { motorSpeed *= -1; }
    else if (cursors.right.isDown && !cursors.left.isDown) {  }
	else { motorEnabled = false; } // roll if no keys pressed

	for (var i = 0; i < 2; i++) {
		driveJoints[i].EnableMotor(motorEnabled);
		driveJoints[i].SetMotorSpeed(motorSpeed);
	}
}

function render() {

	game.debug.box2dWorld();

}
</script>
